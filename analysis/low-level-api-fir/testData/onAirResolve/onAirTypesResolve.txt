public final [ResolvedTo(BODY_RESOLVE)] class Y : R|kotlin/Any| {
    public [ResolvedTo(BODY_RESOLVE)] constructor(): R|X.Y| {
        super<R|kotlin/Any|>()
    }

    public open [ResolvedTo(BODY_RESOLVE)] class BASE : R|X| {
        public [ResolvedTo(BODY_RESOLVE)] constructor(): R|X.Y.BASE| {
            super<R|X|>()
        }

    }

    public final [ResolvedTo(BODY_RESOLVE)] class DERIVED : R|X.Y.BASE| {
        public [ResolvedTo(BODY_RESOLVE)] constructor(): R|X.Y.DERIVED| {
            super<R|X.Y.BASE|>()
        }

    }

    public final [ResolvedTo(BODY_RESOLVE)] fun withType([ResolvedTo(BODY_RESOLVE)] arg: R|X.Y.BASE|): R|kotlin/Unit| {
    }

}
